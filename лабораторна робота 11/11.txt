					/Видалення бази даних, якщо вона вже існує, створення бази даних,якщо вона не існує/
DROP DATABASE IF EXISTS university;
CREATE DATABASE IF NOT EXISTS university;
					/Створення таблиці Студент, що має наступні властивості:його код у базі даних,ім'я,прізвище,по батькові,
					номер групи,курс,спеціальність,факультет,дата вступу/
CREATE TABLE Students(
    student_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(18) NOT NULL DEFAULT '',
    surname VARCHAR(50) NOT NULL DEFAULT '',
    second_name VARCHAR(20) NOT NULL DEFAULT '',
    group_ INT NOT NULL,
    course INT NOT NULL,
    specialyty INT(3) NOT NULL,
    faculty INT(3) NOT NULL,
    date_postupleniya DATE NOT NULL
);
					/Створюємо таблицю, де будуть зберігатись відомості про успішність студентів: номер заліковки=код студента,номер семестру,дисципліну,
					оцінка( від 0 до 100 балів), дата екзамену,викладач=код викладача/
CREATE TABLE Academic_Perfomance(
    book_id INT PRIMARY KEY,
    semestr INT(3) NOT NULL DEFAULT 1,
    subject INT(3) NOT NULL,
   	mark INT(3) NOT NULL,
    date_exam DATE NOT NULL,
    teacher INT NOT NULL);
					/Створюємо таблицю викладач, де зберігаються відомості про викладача: код викладача, ім'я,прізвище,по батькові,
					факультет, предмет/
CREATE TABLE Teachers(
    teacher_id INT PRIMARY KEY AUTO_INCREMENT,
    code_teach INT(5) UNIQUE NOT NULL,
    name_t VARCHAR(20) NOT NULL DEFAULT '',
    surname_t VARCHAR(50) NOT NULL DEFAULT '',
    second_name VARCHAR(50) NOT NULL DEFAULT '',
    faculty_t INT(3) NOT NULL);
					/Допоміжна таблиця, у якій містяться спеціальності та їх код(як у системі ЄДБО,наприклад 122-Комп'ютерні науки)/
CREATE TABLE Speciality(
    id_speciality INT(3) PRIMARY KEY AUTO_INCREMENT,
    speciality_name VARCHAR(20) NOT NULL UNIQUE DEFAULT '');
					/Допоміжна таблиця факультет, у якій містяться факультети/
CREATE TABLE Faculty(
    id_faculty INT(3) PRIMARY KEY AUTO_INCREMENT,
    name_faculty VARCHAR(30) NOT NULL UNIQUE DEFAULT '');
					/Допоміжна таблиця предмет, де зберігаються відомості про дисципліни/
CREATE TABLE Subject(
    id_subject INT(3) PRIMARY KEY AUTO_INCREMENT,
    subject_name VARCHAR(100)NOT NULL UNIQUE DEFAULT '');
CREATE TABLE Scientific_title(
    id_stitle INT(3) PRIMARY KEY AUTO_INCREMENT,
    stitle_name VARCHAR(100) NOT NULL UNIQUE DEFAULT '');
ALTER TABLE students ADD FOREIGN KEY(faculty) REFERENCES Faculty(id_faculty);
ALTER TABLE students ADD FOREIGN KEY(specialyty) REFERENCES Speciality(id_speciality);
ALTER TABLE  Academic_Perfomance ADD FOREIGN KEY(book_id) REFERENCES students(student_id);
ALTER TABLE Academic_Perfomance ADD FOREIGN KEY(subject) REFERENCES Subject(id_subject);
ALTER TABLE teachers ADD FOREIGN KEY(scientific_title) REFERENCES scientific_title(id_stitle);
							/Додаємо код та назву спеціальностей у таблицю Speciality/
INSERT INTO Speciality(id_speciality,speciality_name) VALUES
  (122,'Комп`ютені науки'),
  (121,'Інженерія програмного запезпечення'),
  (091,'Біологія'),
  (106,'Географія'),
  (241,'Готельно-ресторанна справа'),
  (012,'Дошкільна освіта '),
  (101,'Екологія'),
  (051,'Економіка'),
  (061,'Журналістика'),
  (126,'Інформаційні системи та технології'),
  (032,'Історія та археологія'),
  (034,'Культурологія'),
  (222,'Медицина'),
  (073,'Менеджмент'),
  (025,'Музичне мистецтво'),
  (103,'Науки про Землю'),
  (071,'Облік і оподаткування'),
  (023,'Образотворче мистецтво, декоративне мистецтво, реставрація'),
  (076,'Підприємництво, торгівля та біржова діяльність'),
  (013,'Початкова освіта'),
  (081,'Право'),
  (015,'Професійна освіта'),
  (053,'Психологія'),
  (281,'Публічне управління та адміністрування');
							/Додаємо відомості про факультети у таблицю Faculty, код факультету буде автоматично рахуватись/
INSERT INTO Faculty(name_faculty) VALUES
    ('Комп`ютерних наук, фізики та математики'),
    ('Факультет біології, географії та екології'),
    ('Педагогічний факультет'),
    ('Факультет бізнесу і права'),
    ('Факультет української й іноземної філології та журналістики'),
    ('Факультет культури і мистецтв'),
    ('Медичний факультет'),
    ('Факультет психології, історії та соціології'),
    ('Факультет фізичного виховання та спорту');
							/Додаємо відомості про предмети у таблицю Subject/
INSERT INTO Subject(subject_name) VALUES
    ('Математичний аналіз'),
    ('Лінійна Алгебра'),
    ('Біологія'),
    ('Право'),
    ('Українська мова та література'),
    ('Філософія'),
    ('Фізичне виховання'),
    ('Медицина'),
    ('Фармакологія'),
    ('Музичне мистецтво'),
    ('Психологія спілкування'),
    ('Програмування'),
    ('Бази даних'),
    ('Анатомія'),
    ('Педагогіка'),
    ('Журналістика'),
    ('Лінгвістика');
							/Додаємо записи у допоміжну таблицю з вченими званнями/
INSERT INTO scientific_title(stitle_name) VALUES
('Доцент'),
('Кандидат наук'),
('Професор'),
('Асистент'),
('Старший викладач'),
('Доктор наук');
							/Додаємо записи у таблицю Students/
INSERT INTO students(student_id,code_student,name,surname,second_name,group_,course,specialyty,faculty,date_postupleniya,form_st) VALUES 
(1,1233,'Іван','Довгань','Миколайович',131,1,122,1,'20-08-2021','Денна'),
(2,2372,'Марія','Скоропай','Володимірівна',241,2,121,1,'15-08-2020','Денна'),
(3,2583,'Степан','Назаренко','Олексійович',350,3,91,2,'09-08-2019','Денна'),
(4,0992,'Миколай','Шубайко','Степанович',151,1,32,8,'10-08-2021','Заочна'),
(5,6281,'Анастасія','Вінова','Анатоліївна',231,2,122,1,'08-08-2021','Денна'),
(6,5728,'Альона','Клименко','Станіславівна',481,4,81,4,'07-08-2018','Заочна'),
(7,3892,'Мирослава','Нагній','Іванівна',191,1,222,7,'10-06-2021','Денна'),
(8,6291,'Анна','Курба','Руславівна',131,1,122,1,'20-08-2021','Денна');
INSERT INTO academic_perfomance(book_id,semestr,subject,mark,date_exam,teacher) VALUES

ALTER TABLE teachers ADD FOREIGN KEY(faculty_t) REFERENCES Faculty(id_faculty);
							/Додаємо записи у таблицю Teachers/
INSERT INTO Teachers(code_teach,name_t,surname_t,second_name,faculty_t,scientific_title) VALUES
(1234,'Іванна','Стефанюк','Миколаївна',1,1),
(1273,'Валентин','Гавриш','Олексійович',2,2),
(2453,'Марія','Стефанівська','Степанівна',4,3),
(7821,'Степан','Тарасенко','Валентинович',3,4),
(6721,'Микола','Довгунов','Валерійович',6,1),
(2671,'Анастасія','Косяк','Олександрівна',7,2),
(2781,'Анна','Копайенко','Станіславівна',8,5);
							/Запроси по таблицях/
SELECT * FROM teachers;  //вивести всі записи з таблиці Викладачі

SELECT teachers.teacher_id AS 'ID Викладача', teachers.name_t AS 'Ім`я', teachers.surname_t AS 'Прізвище',teachers.second_name AS 'По батькові', 
faculty.name_faculty AS 'Факультет' FROM teachers INNER JOIN faculty ON teachers.faculty_t=faculty.id_faculty;

CREATE PROCEDURE All_info_teachers()
SELECT teachers.*, faculty.name_faculty, scientific_title.stitle_name FROM teachers INNER JOIN faculty ON teachers.faculty_t=faculty.id_faculty INNER JOIN scientific_title ON teachers.scientific_title=scientific_title.id_stitle;
CALL All_info_teachers();

SELECT * from teachers WHERE faculty_t = (SELECT id_faculty FROM faculty WHERE faculty.name_faculty = '%Комп`ютерних%');

DELIMITER $$
CREATE TRIGGER trig1 AFTER INSERT ON teachers
FOR EACH ROW
BEGIN
IF (SELECT COUNT(DISTINCT(teachers.faculty_t)) FROM teachers WHERE NEW.faculty_t=teachers.faculty_t) NOT BETWEEN 1 AND 10
THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT='Кількість факультетів може бути в діапазоні від 1 до 10';
END IF;
END;
$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER trig2 BEFORE DELETE ON students
FOR EACH ROW
BEGIN
	IF ((CURRENT_USER != 'dbo') AND (COLUMNS_UPDATED() & 1)!=0)
	THEN 
	SIGNAL SQLSTATE '45001' SET MESSAGE_TEXT='Ви не користувач dbo.Лише цей користувач може видаляти дані про студентів.';
	END IF;
END
$$
DELIMITER ;